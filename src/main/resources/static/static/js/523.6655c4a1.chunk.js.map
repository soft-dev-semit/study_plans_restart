{"version":3,"file":"static/js/523.6655c4a1.chunk.js","mappings":"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","sources":["../node_modules/@mui/styled-engine/GlobalStyles/GlobalStyles.js","../node_modules/@mui/system/esm/GlobalStyles/GlobalStyles.js","../node_modules/@mui/material/GlobalStyles/GlobalStyles.js","../node_modules/@mui/material/zero-styled/index.js","../node_modules/@mui/material/Typography/typographyClasses.js","../node_modules/@mui/material/Typography/Typography.js","pages/Instruction.tsx","../node_modules/@mui/system/esm/useThemeProps/useThemeProps.js","../node_modules/@mui/system/esm/useThemeProps/getThemeProps.js","../node_modules/@mui/system/esm/styled/styled.js","../node_modules/@mui/system/esm/Container/createContainer.js","../node_modules/@mui/material/Container/Container.js"],"sourcesContent":["'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { Global } from '@emotion/react';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction isEmpty(obj) {\n  return obj === undefined || obj === null || Object.keys(obj).length === 0;\n}\nexport default function GlobalStyles(props) {\n  const {\n    styles,\n    defaultTheme = {}\n  } = props;\n  const globalStyles = typeof styles === 'function' ? themeInput => styles(isEmpty(themeInput) ? defaultTheme : themeInput) : styles;\n  return /*#__PURE__*/_jsx(Global, {\n    styles: globalStyles\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? GlobalStyles.propTypes = {\n  defaultTheme: PropTypes.object,\n  styles: PropTypes.oneOfType([PropTypes.array, PropTypes.string, PropTypes.object, PropTypes.func])\n} : void 0;","'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { GlobalStyles as MuiGlobalStyles } from '@mui/styled-engine';\nimport useTheme from \"../useTheme/index.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction GlobalStyles({\n  styles,\n  themeId,\n  defaultTheme = {}\n}) {\n  const upperTheme = useTheme(defaultTheme);\n  const globalStyles = typeof styles === 'function' ? styles(themeId ? upperTheme[themeId] || upperTheme : upperTheme) : styles;\n  return /*#__PURE__*/_jsx(MuiGlobalStyles, {\n    styles: globalStyles\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? GlobalStyles.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │ To update them, edit the TypeScript types and run `pnpm proptypes`. │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * @ignore\n   */\n  defaultTheme: PropTypes.object,\n  /**\n   * @ignore\n   */\n  styles: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.array, PropTypes.func, PropTypes.number, PropTypes.object, PropTypes.string, PropTypes.bool]),\n  /**\n   * @ignore\n   */\n  themeId: PropTypes.string\n} : void 0;\nexport default GlobalStyles;","'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { GlobalStyles as SystemGlobalStyles } from '@mui/system';\nimport defaultTheme from \"../styles/defaultTheme.js\";\nimport THEME_ID from \"../styles/identifier.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction GlobalStyles(props) {\n  return /*#__PURE__*/_jsx(SystemGlobalStyles, {\n    ...props,\n    defaultTheme: defaultTheme,\n    themeId: THEME_ID\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? GlobalStyles.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The styles you want to apply globally.\n   */\n  styles: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.array, PropTypes.func, PropTypes.number, PropTypes.object, PropTypes.string, PropTypes.bool])\n} : void 0;\nexport default GlobalStyles;","import * as React from 'react';\nimport { extendSxProp } from '@mui/system/styleFunctionSx';\nimport useTheme from \"../styles/useTheme.js\";\nimport GlobalStyles from \"../GlobalStyles/index.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport { css, keyframes } from '@mui/system';\nexport { default as styled } from \"../styles/styled.js\";\nexport function globalCss(styles) {\n  return function GlobalStylesWrapper(props) {\n    return (\n      /*#__PURE__*/\n      // Pigment CSS `globalCss` support callback with theme inside an object but `GlobalStyles` support theme as a callback value.\n      _jsx(GlobalStyles, {\n        styles: typeof styles === 'function' ? theme => styles({\n          theme,\n          ...props\n        }) : styles\n      })\n    );\n  };\n}\n\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport function internal_createExtendSxProp() {\n  return extendSxProp;\n}\nexport { useTheme };","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getTypographyUtilityClass(slot) {\n  return generateUtilityClass('MuiTypography', slot);\n}\nconst typographyClasses = generateUtilityClasses('MuiTypography', ['root', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'subtitle1', 'subtitle2', 'body1', 'body2', 'inherit', 'button', 'caption', 'overline', 'alignLeft', 'alignRight', 'alignCenter', 'alignJustify', 'noWrap', 'gutterBottom', 'paragraph']);\nexport default typographyClasses;","'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { styled, internal_createExtendSxProp } from \"../zero-styled/index.js\";\nimport memoTheme from \"../utils/memoTheme.js\";\nimport { useDefaultProps } from \"../DefaultPropsProvider/index.js\";\nimport capitalize from \"../utils/capitalize.js\";\nimport createSimplePaletteValueFilter from \"../utils/createSimplePaletteValueFilter.js\";\nimport { getTypographyUtilityClass } from \"./typographyClasses.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst v6Colors = {\n  primary: true,\n  secondary: true,\n  error: true,\n  info: true,\n  success: true,\n  warning: true,\n  textPrimary: true,\n  textSecondary: true,\n  textDisabled: true\n};\nconst extendSxProp = internal_createExtendSxProp();\nconst useUtilityClasses = ownerState => {\n  const {\n    align,\n    gutterBottom,\n    noWrap,\n    paragraph,\n    variant,\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root', variant, ownerState.align !== 'inherit' && `align${capitalize(align)}`, gutterBottom && 'gutterBottom', noWrap && 'noWrap', paragraph && 'paragraph']\n  };\n  return composeClasses(slots, getTypographyUtilityClass, classes);\n};\nexport const TypographyRoot = styled('span', {\n  name: 'MuiTypography',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, ownerState.variant && styles[ownerState.variant], ownerState.align !== 'inherit' && styles[`align${capitalize(ownerState.align)}`], ownerState.noWrap && styles.noWrap, ownerState.gutterBottom && styles.gutterBottom, ownerState.paragraph && styles.paragraph];\n  }\n})(memoTheme(({\n  theme\n}) => ({\n  margin: 0,\n  variants: [{\n    props: {\n      variant: 'inherit'\n    },\n    style: {\n      // Some elements, like <button> on Chrome have default font that doesn't inherit, reset this.\n      font: 'inherit',\n      lineHeight: 'inherit',\n      letterSpacing: 'inherit'\n    }\n  }, ...Object.entries(theme.typography).filter(([variant, value]) => variant !== 'inherit' && value && typeof value === 'object').map(([variant, value]) => ({\n    props: {\n      variant\n    },\n    style: value\n  })), ...Object.entries(theme.palette).filter(createSimplePaletteValueFilter()).map(([color]) => ({\n    props: {\n      color\n    },\n    style: {\n      color: (theme.vars || theme).palette[color].main\n    }\n  })), ...Object.entries(theme.palette?.text || {}).filter(([, value]) => typeof value === 'string').map(([color]) => ({\n    props: {\n      color: `text${capitalize(color)}`\n    },\n    style: {\n      color: (theme.vars || theme).palette.text[color]\n    }\n  })), {\n    props: ({\n      ownerState\n    }) => ownerState.align !== 'inherit',\n    style: {\n      textAlign: 'var(--Typography-textAlign)'\n    }\n  }, {\n    props: ({\n      ownerState\n    }) => ownerState.noWrap,\n    style: {\n      overflow: 'hidden',\n      textOverflow: 'ellipsis',\n      whiteSpace: 'nowrap'\n    }\n  }, {\n    props: ({\n      ownerState\n    }) => ownerState.gutterBottom,\n    style: {\n      marginBottom: '0.35em'\n    }\n  }, {\n    props: ({\n      ownerState\n    }) => ownerState.paragraph,\n    style: {\n      marginBottom: 16\n    }\n  }]\n})));\nconst defaultVariantMapping = {\n  h1: 'h1',\n  h2: 'h2',\n  h3: 'h3',\n  h4: 'h4',\n  h5: 'h5',\n  h6: 'h6',\n  subtitle1: 'h6',\n  subtitle2: 'h6',\n  body1: 'p',\n  body2: 'p',\n  inherit: 'p'\n};\nconst Typography = /*#__PURE__*/React.forwardRef(function Typography(inProps, ref) {\n  const {\n    color,\n    ...themeProps\n  } = useDefaultProps({\n    props: inProps,\n    name: 'MuiTypography'\n  });\n  const isSxColor = !v6Colors[color];\n  // TODO: Remove `extendSxProp` in v7\n  const props = extendSxProp({\n    ...themeProps,\n    ...(isSxColor && {\n      color\n    })\n  });\n  const {\n    align = 'inherit',\n    className,\n    component,\n    gutterBottom = false,\n    noWrap = false,\n    paragraph = false,\n    variant = 'body1',\n    variantMapping = defaultVariantMapping,\n    ...other\n  } = props;\n  const ownerState = {\n    ...props,\n    align,\n    color,\n    className,\n    component,\n    gutterBottom,\n    noWrap,\n    paragraph,\n    variant,\n    variantMapping\n  };\n  const Component = component || (paragraph ? 'p' : variantMapping[variant] || defaultVariantMapping[variant]) || 'span';\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(TypographyRoot, {\n    as: Component,\n    ref: ref,\n    className: clsx(classes.root, className),\n    ...other,\n    ownerState: ownerState,\n    style: {\n      ...(align !== 'inherit' && {\n        '--Typography-textAlign': align\n      }),\n      ...other.style\n    }\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? Typography.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * Set the text-align on the component.\n   * @default 'inherit'\n   */\n  align: PropTypes.oneOf(['center', 'inherit', 'justify', 'left', 'right']),\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The color of the component.\n   * It supports both default and custom theme colors, which can be added as shown in the\n   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).\n   */\n  color: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['primary', 'secondary', 'success', 'error', 'info', 'warning', 'textPrimary', 'textSecondary', 'textDisabled']), PropTypes.string]),\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * If `true`, the text will have a bottom margin.\n   * @default false\n   */\n  gutterBottom: PropTypes.bool,\n  /**\n   * If `true`, the text will not wrap, but instead will truncate with a text overflow ellipsis.\n   *\n   * Note that text overflow can only happen with block or inline-block level elements\n   * (the element needs to have a width in order to overflow).\n   * @default false\n   */\n  noWrap: PropTypes.bool,\n  /**\n   * If `true`, the element will be a paragraph element.\n   * @default false\n   * @deprecated Use the `component` prop instead. This prop will be removed in v7. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.\n   */\n  paragraph: PropTypes.bool,\n  /**\n   * @ignore\n   */\n  style: PropTypes.object,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * Applies the theme typography styles.\n   * @default 'body1'\n   */\n  variant: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['body1', 'body2', 'button', 'caption', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'inherit', 'overline', 'subtitle1', 'subtitle2']), PropTypes.string]),\n  /**\n   * The component maps the variant prop to a range of different HTML element types.\n   * For instance, subtitle1 to `<h6>`.\n   * If you wish to change that mapping, you can provide your own.\n   * Alternatively, you can use the `component` prop.\n   * @default {\n   *   h1: 'h1',\n   *   h2: 'h2',\n   *   h3: 'h3',\n   *   h4: 'h4',\n   *   h5: 'h5',\n   *   h6: 'h6',\n   *   subtitle1: 'h6',\n   *   subtitle2: 'h6',\n   *   body1: 'p',\n   *   body2: 'p',\n   *   inherit: 'p',\n   * }\n   */\n  variantMapping: PropTypes /* @typescript-to-proptypes-ignore */.object\n} : void 0;\nexport default Typography;","import { Box, Container, Typography } from \"@mui/material\";\n\nexport default function Instruction() {\n    return (\n\t\t\t<Container maxWidth='md' sx={{ mt: 4 }}>\n\t\t\t\t<Typography variant='h4' gutterBottom align='center'>\n\t\t\t\t\tІнструкція\n\t\t\t\t</Typography>\n\t\t\t\t<Typography\n\t\t\t\t\tvariant='body1'\n\t\t\t\t\tgutterBottom\n\t\t\t\t\talign='center'\n\t\t\t\t\tcolor='text.secondary'\n\t\t\t\t>\n\t\t\t\t\t1) Планы\n\t\t\t\t</Typography>\n\t\t\t\t<Box sx={{ mt: 4 }}>\n\t\t\t\t\t<Typography>\n\t\t\t\t\t\tДля того, чтобы просмотреть планы, перейдите на вкладку \"Плани\" в\n\t\t\t\t\t\tменю 2 кнопка. Затем выберите нужный план из списка. Функционал\n\t\t\t\t\t\tпозволяет просматривать планы по неделям, а также смотреть\n\t\t\t\t\t\tколичество часов и кредитов. (Для редактирования планов еще не\n\t\t\t\t\t\tдобавлен функционал. Приносим извинения за неудобства)\n\t\t\t\t\t</Typography>\n\t\t\t\t</Box>\n\t\t\t\t<Typography\n\t\t\t\t\tvariant='body1'\n\t\t\t\t\tgutterBottom\n\t\t\t\t\talign='center'\n\t\t\t\t\tcolor='text.secondary'\n\t\t\t\t>\n\t\t\t\t\t2) Навантаження\n\t\t\t\t</Typography>\n\t\t\t\t<Box sx={{ mt: 4 }}>\n\t\t\t\t\t<Typography>\n\t\t\t\t\t\tДля того, чтобы просмотреть навантаження, перейдите на вкладку\n\t\t\t\t\t\t\"Навантаження\" в меню 3 кнопка. Можно выбрать сизон (осень/весна) и\n\t\t\t\t\t\tпосмотреть навантаження. (Вариант только в разработке и не является\n\t\t\t\t\t\tокончательным) (Для редактирования планов еще не добавлен\n\t\t\t\t\t\tфункционал. Приносим извинения за неудобства)\n\t\t\t\t\t</Typography>\n\t\t\t\t</Box>\n\t\t\t\t<Typography\n\t\t\t\t\tvariant='body1'\n\t\t\t\t\tgutterBottom\n\t\t\t\t\talign='center'\n\t\t\t\t\tcolor='text.secondary'\n\t\t\t\t>\n\t\t\t\t\t3) Импорт\n\t\t\t\t</Typography>\n\t\t\t\t<Box sx={{ mt: 4 }}>\n\t\t\t\t\t<Typography>\n\t\t\t\t\t\tДля того, чтобы просмотреть навантаження, перейдите на вкладку\n\t\t\t\t\t\t\"Импорт\" в меню 4 кнопка. Можно выбрать файл или директорию для\n\t\t\t\t\t\tимпорта. В поле для передачи файла с помощью Drag and Drop есть\n\t\t\t\t\t\tкнопки для выбора файла или директории. Поддерживаются файлы .xlsx.\n\t\t\t\t\t\tПосле выбора файла или директории нажмите кнопку \"Завантажити\".(В\n\t\t\t\t\t\tразработке, на данным момент просто сразу оправляет для валидации на\n\t\t\t\t\t\tсервер) (Вариант только в разработке и не является окончательным) :)\n\t\t\t\t\t</Typography>\n\t\t\t\t</Box>\n\t\t\t\t<Typography\n\t\t\t\t\tvariant='body1'\n\t\t\t\t\tgutterBottom\n\t\t\t\t\talign='center'\n\t\t\t\t\tcolor='text.secondary'\n\t\t\t\t>\n\t\t\t\t\t4) Експорт\n\t\t\t\t</Typography>\n\t\t\t\t<Box sx={{ mt: 4 }}>\n\t\t\t\t\t<Typography>\n\t\t\t\t\t\tВ дальнейшем будет функционал для экспрта будет перенесен в\n\t\t\t\t\t\tНавантаження (Сейчас это просто пустая страница как и профиль)\n\t\t\t\t\t</Typography>\n\t\t\t\t</Box>\n\t\t\t</Container>\n\t\t)\n} ","'use client';\n\nimport getThemeProps from \"./getThemeProps.js\";\nimport useTheme from \"../useTheme/index.js\";\nexport default function useThemeProps({\n  props,\n  name,\n  defaultTheme,\n  themeId\n}) {\n  let theme = useTheme(defaultTheme);\n  if (themeId) {\n    theme = theme[themeId] || theme;\n  }\n  return getThemeProps({\n    theme,\n    name,\n    props\n  });\n}","import resolveProps from '@mui/utils/resolveProps';\nexport default function getThemeProps(params) {\n  const {\n    theme,\n    name,\n    props\n  } = params;\n  if (!theme || !theme.components || !theme.components[name] || !theme.components[name].defaultProps) {\n    return props;\n  }\n  return resolveProps(theme.components[name].defaultProps, props);\n}","import createStyled from \"../createStyled/index.js\";\nconst styled = createStyled();\nexport default styled;","import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nimport composeClasses from '@mui/utils/composeClasses';\nimport capitalize from '@mui/utils/capitalize';\nimport useThemePropsSystem from \"../useThemeProps/index.js\";\nimport systemStyled from \"../styled/index.js\";\nimport createTheme from \"../createTheme/index.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultTheme = createTheme();\nconst defaultCreateStyledComponent = systemStyled('div', {\n  name: 'MuiContainer',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, styles[`maxWidth${capitalize(String(ownerState.maxWidth))}`], ownerState.fixed && styles.fixed, ownerState.disableGutters && styles.disableGutters];\n  }\n});\nconst useThemePropsDefault = inProps => useThemePropsSystem({\n  props: inProps,\n  name: 'MuiContainer',\n  defaultTheme\n});\nconst useUtilityClasses = (ownerState, componentName) => {\n  const getContainerUtilityClass = slot => {\n    return generateUtilityClass(componentName, slot);\n  };\n  const {\n    classes,\n    fixed,\n    disableGutters,\n    maxWidth\n  } = ownerState;\n  const slots = {\n    root: ['root', maxWidth && `maxWidth${capitalize(String(maxWidth))}`, fixed && 'fixed', disableGutters && 'disableGutters']\n  };\n  return composeClasses(slots, getContainerUtilityClass, classes);\n};\nexport default function createContainer(options = {}) {\n  const {\n    // This will allow adding custom styled fn (for example for custom sx style function)\n    createStyledComponent = defaultCreateStyledComponent,\n    useThemeProps = useThemePropsDefault,\n    componentName = 'MuiContainer'\n  } = options;\n  const ContainerRoot = createStyledComponent(({\n    theme,\n    ownerState\n  }) => ({\n    width: '100%',\n    marginLeft: 'auto',\n    boxSizing: 'border-box',\n    marginRight: 'auto',\n    ...(!ownerState.disableGutters && {\n      paddingLeft: theme.spacing(2),\n      paddingRight: theme.spacing(2),\n      // @ts-ignore module augmentation fails if custom breakpoints are used\n      [theme.breakpoints.up('sm')]: {\n        paddingLeft: theme.spacing(3),\n        paddingRight: theme.spacing(3)\n      }\n    })\n  }), ({\n    theme,\n    ownerState\n  }) => ownerState.fixed && Object.keys(theme.breakpoints.values).reduce((acc, breakpointValueKey) => {\n    const breakpoint = breakpointValueKey;\n    const value = theme.breakpoints.values[breakpoint];\n    if (value !== 0) {\n      // @ts-ignore\n      acc[theme.breakpoints.up(breakpoint)] = {\n        maxWidth: `${value}${theme.breakpoints.unit}`\n      };\n    }\n    return acc;\n  }, {}), ({\n    theme,\n    ownerState\n  }) => ({\n    // @ts-ignore module augmentation fails if custom breakpoints are used\n    ...(ownerState.maxWidth === 'xs' && {\n      // @ts-ignore module augmentation fails if custom breakpoints are used\n      [theme.breakpoints.up('xs')]: {\n        // @ts-ignore module augmentation fails if custom breakpoints are used\n        maxWidth: Math.max(theme.breakpoints.values.xs, 444)\n      }\n    }),\n    ...(ownerState.maxWidth &&\n    // @ts-ignore module augmentation fails if custom breakpoints are used\n    ownerState.maxWidth !== 'xs' && {\n      // @ts-ignore module augmentation fails if custom breakpoints are used\n      [theme.breakpoints.up(ownerState.maxWidth)]: {\n        // @ts-ignore module augmentation fails if custom breakpoints are used\n        maxWidth: `${theme.breakpoints.values[ownerState.maxWidth]}${theme.breakpoints.unit}`\n      }\n    })\n  }));\n  const Container = /*#__PURE__*/React.forwardRef(function Container(inProps, ref) {\n    const props = useThemeProps(inProps);\n    const {\n      className,\n      component = 'div',\n      disableGutters = false,\n      fixed = false,\n      maxWidth = 'lg',\n      classes: classesProp,\n      ...other\n    } = props;\n    const ownerState = {\n      ...props,\n      component,\n      disableGutters,\n      fixed,\n      maxWidth\n    };\n\n    // @ts-ignore module augmentation fails if custom breakpoints are used\n    const classes = useUtilityClasses(ownerState, componentName);\n    return (\n      /*#__PURE__*/\n      // @ts-ignore theme is injected by the styled util\n      _jsx(ContainerRoot, {\n        as: component\n        // @ts-ignore module augmentation fails if custom breakpoints are used\n        ,\n        ownerState: ownerState,\n        className: clsx(classes.root, className),\n        ref: ref,\n        ...other\n      })\n    );\n  });\n  process.env.NODE_ENV !== \"production\" ? Container.propTypes /* remove-proptypes */ = {\n    children: PropTypes.node,\n    classes: PropTypes.object,\n    className: PropTypes.string,\n    component: PropTypes.elementType,\n    disableGutters: PropTypes.bool,\n    fixed: PropTypes.bool,\n    maxWidth: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['xs', 'sm', 'md', 'lg', 'xl', false]), PropTypes.string]),\n    sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n  } : void 0;\n  return Container;\n}","'use client';\n\nimport PropTypes from 'prop-types';\nimport { createContainer } from '@mui/system';\nimport capitalize from \"../utils/capitalize.js\";\nimport styled from \"../styles/styled.js\";\nimport { useDefaultProps } from \"../DefaultPropsProvider/index.js\";\nconst Container = createContainer({\n  createStyledComponent: styled('div', {\n    name: 'MuiContainer',\n    slot: 'Root',\n    overridesResolver: (props, styles) => {\n      const {\n        ownerState\n      } = props;\n      return [styles.root, styles[`maxWidth${capitalize(String(ownerState.maxWidth))}`], ownerState.fixed && styles.fixed, ownerState.disableGutters && styles.disableGutters];\n    }\n  }),\n  useThemeProps: inProps => useDefaultProps({\n    props: inProps,\n    name: 'MuiContainer'\n  })\n});\nprocess.env.NODE_ENV !== \"production\" ? Container.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * If `true`, the left and right padding is removed.\n   * @default false\n   */\n  disableGutters: PropTypes.bool,\n  /**\n   * Set the max-width to match the min-width of the current breakpoint.\n   * This is useful if you'd prefer to design for a fixed set of sizes\n   * instead of trying to accommodate a fully fluid viewport.\n   * It's fluid by default.\n   * @default false\n   */\n  fixed: PropTypes.bool,\n  /**\n   * Determine the max-width of the container.\n   * The container width grows with the size of the screen.\n   * Set to `false` to disable `maxWidth`.\n   * @default 'lg'\n   */\n  maxWidth: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['xs', 'sm', 'md', 'lg', 'xl', false]), PropTypes.string]),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default Container;"],"names":["GlobalStyles","props","styles","defaultTheme","globalStyles","themeInput","undefined","obj","Object","keys","length","_jsx","Global","_ref","themeId","upperTheme","useTheme","MuiGlobalStyles","SystemGlobalStyles","THEME_ID","globalCss","theme","internal_createExtendSxProp","extendSxProp","getTypographyUtilityClass","slot","generateUtilityClass","generateUtilityClasses","v6Colors","primary","secondary","error","info","success","warning","textPrimary","textSecondary","textDisabled","TypographyRoot","styled","name","overridesResolver","ownerState","root","variant","align","capitalize","noWrap","gutterBottom","paragraph","memoTheme","margin","variants","style","font","lineHeight","letterSpacing","entries","typography","filter","_ref2","value","map","_ref3","palette","createSimplePaletteValueFilter","_ref4","color","vars","main","text","_ref5","_ref6","_ref7","textAlign","_ref8","overflow","textOverflow","whiteSpace","_ref9","marginBottom","_ref10","defaultVariantMapping","h1","h2","h3","h4","h5","h6","subtitle1","subtitle2","body1","body2","inherit","React","inProps","ref","themeProps","useDefaultProps","className","component","variantMapping","other","Component","classes","slots","composeClasses","useUtilityClasses","as","clsx","Instruction","_jsxs","Container","maxWidth","sx","mt","children","Typography","Box","useThemeProps","params","components","defaultProps","resolveProps","getThemeProps","createStyled","createTheme","defaultCreateStyledComponent","systemStyled","String","fixed","disableGutters","useThemePropsDefault","useThemePropsSystem","options","arguments","createStyledComponent","componentName","ContainerRoot","width","marginLeft","boxSizing","marginRight","paddingLeft","spacing","paddingRight","breakpoints","up","values","reduce","acc","breakpointValueKey","breakpoint","unit","Math","max","xs","classesProp","createContainer"],"sourceRoot":""}