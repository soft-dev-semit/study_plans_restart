{"version":3,"file":"static/js/657.07ae868d.chunk.js","mappings":"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","sources":["api/Requests.ts","components/UniversalUploader.tsx","pages/Import.tsx"],"sourcesContent":["import axios from 'axios'\n\nconst domain = `http://localhost:8080/api/`\n\nconst axiosInstance = axios.create({\n\tbaseURL: domain,\n\theaders: {\n\t\t'Content-Type': 'application/json',\n\t\tAccept: 'application/json',\n\t},\n})\n\naxiosInstance.interceptors.request.use(\n\trequest => {\n\t\tconsole.log(`${request.method?.toUpperCase()} ${request.url}`, request)\n\t\treturn request\n\t},\n\terror => {\n\t\tconsole.error('REQ FAIL: ', error)\n\t\treturn Promise.reject(error)\n\t}\n)\n\naxiosInstance.interceptors.response.use(\n\tresponse => {\n\t\tconsole.log('RES: ', response)\n\t\treturn response\n\t},\n\tasync error => {\n\t\tconsole.error(\n\t\t\t`${error.config.method.toUpperCase()}: ${error.config.url} ${error.code}`,\n\t\t\terror\n\t\t)\n\t\tif (error.response?.data?.message) {\n\t\t\treturn Promise.resolve(error.response)\n\t\t}\n\t\treturn Promise.reject(error)\n\t}\n)\nexport const Requests = {\n\tasync getPlans(curriculumId: number) {\n\t\ttry {\n\t\t\tconst response = await axiosInstance.get(\n\t\t\t\t`/curriculum/${curriculumId}/all`\n\t\t\t)\n\t\t\treturn response.data\n\t\t} catch (error) {\n\t\t\tconsole.error('Error fetching plans:', error)\n\t\t\treturn []\n\t\t}\n\t},\n\n\tasync getAllCurriculums() {\n\t\ttry {\n\t\t\tconst response = await axiosInstance.get('/curriculum/')\n\t\t\treturn response.data\n\t\t} catch (error) {\n\t\t\tconsole.error('Error fetching all curriculums:', error)\n\t\t\treturn []\n\t\t}\n\t},\n\n\tasync importSingleFile(file: File) {\n\t\ttry {\n\t\t\tconst formData = new FormData()\n\t\t\tformData.append('file', file)\n\n\t\t\tconst response = await axiosInstance.post('/import/single', formData, {\n\t\t\t\theaders: {\n\t\t\t\t\t'Content-Type': 'multipart/form-data',\n\t\t\t\t},\n\t\t\t})\n\t\t\treturn response.data\n\t\t} catch (error) {\n\t\t\tconsole.error('Error importing file:', error)\n\t\t\treturn []\n\t\t}\n\t},\n\tasync importMultiFile(files: File[]) {\n\t\ttry {\n\t\t\tconst formData = new FormData()\n\t\t\tfiles.forEach((file) => {\n\t\t\t\tformData.append('file', file) // Добавляем каждый файл отдельно\n\t\t\t})\n\n\t\t\tconst response = await axiosInstance.post('/import/multiple', formData, {\n\t\t\t\theaders: {\n\t\t\t\t\t'Content-Type': 'multipart/form-data',\n\t\t\t\t},\n\t\t\t})\n\t\t\treturn response.data\n\t\t} catch (error) {\n\t\t\tconsole.error('Error importing file:', error)\n\t\t\treturn []\n\t\t}\n\t},\n\n\tasync importDirectory(filepath: FormData) {\n\t\ttry {\n\t\t\tconst response = await axiosInstance.post('/import/directory', filepath, {\n\t\t\t\theaders: {\n\t\t\t\t\t'Content-Type': 'multipart/form-data',\n\t\t\t\t},\n\t\t\t})\n\t\t\treturn response.data\n\t\t} catch (error) {\n\t\t\tconsole.error('Error fetching all curriculums:', error)\n\t\t\treturn []\n\t\t}\n\t},\n\n\tasync getCourse() {\n\t\ttry {\n\t\t\tconst response = await axiosInstance.get('/export/')\n\t\t\treturn response.data\n\t\t} catch (error) {\n\t\t\tconsole.error('Error fetching all courses:', error)\n\t\t\treturn []\n\t\t}\n\t},\n}\n","import { Box, Typography, Button } from '@mui/material'\nimport { useDropzone } from 'react-dropzone'\nimport CloudUploadIcon from '@mui/icons-material/CloudUpload'\nimport FolderIcon from '@mui/icons-material/Folder'\nimport UploadFileIcon from '@mui/icons-material/UploadFile'\nimport React, { useState, useRef, useEffect } from 'react'\n\ninterface UniversalUploaderProps {\n\tonFileSelected?: (file: File) => void\n\tonDirectorySelected?: (directoryPath: string, files: File[]) => void\n\tacceptedFileTypes?: Record<string, string[]>\n\tmaxFiles?: number\n}\n\nconst UniversalUploader: React.FC<UniversalUploaderProps> = ({\n\tonFileSelected,\n\tonDirectorySelected,\n\tacceptedFileTypes = {\n\t\t'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet': [\n\t\t\t'.xlsx',\n\t\t],\n\t\t'application/vnd.ms-excel': ['.xls'],\n\t},\n\tmaxFiles = 1,\n}) => {\n\tconst [directoryPath, setDirectoryPath] = useState<string>('')\n\tconst [files, setFiles] = useState<File[]>([])\n\tconst [uploadMode, setUploadMode] = useState<'file' | 'directory' | null>(\n\t\tnull\n\t)\n\tconst directoryInputRef = useRef<HTMLInputElement>(null)\n\n\tuseEffect(() => {\n\t\tif (directoryInputRef.current) {\n\t\t\tdirectoryInputRef.current.setAttribute('webkitdirectory', 'true')\n\t\t\tdirectoryInputRef.current.setAttribute('directory', 'true')\n\t\t}\n\t}, [])\n\n\tconst handleDirectoryChange = (\n\t\tevent: React.ChangeEvent<HTMLInputElement>\n\t): void => {\n\t\tconst fileList = event.target.files\n\t\tif (!fileList || fileList.length === 0) return\n\n\t\tconst selectedFiles = Array.from(fileList) as File[]\n\t\tif (selectedFiles.length > 0) {\n\t\t\tconst fullPath = selectedFiles[0].webkitRelativePath\n\t\t\tconst directoryName = fullPath.split('/')[0]\n\n\t\t\tconsole.log('Selected directory:', directoryName)\n\t\t\tconsole.log('Total files:', selectedFiles.length)\n\n\t\t\tsetFiles(selectedFiles)\n\t\t\tsetDirectoryPath(directoryName)\n\t\t\tsetUploadMode('directory')\n\n\t\t\tif (onDirectorySelected) {\n\t\t\t\tonDirectorySelected(directoryName, selectedFiles)\n\t\t\t}\n\t\t}\n\t}\n\n\tconst { getRootProps, getInputProps, isDragActive } = useDropzone({\n\t\tonDrop: acceptedFiles => {\n\t\t\t// Явно указываем тип для массива файлов\n\t\t\tconst validFiles = acceptedFiles.filter((file: File) => {\n\t\t\t\tconst fileExtension = file.name.split('.').pop()?.toLowerCase() || ''\n\t\t\t\tconst allowedExtensions = Object.values(acceptedFileTypes)\n\t\t\t\t\t.flat()\n\t\t\t\t\t.map(ext => ext.replace('.', ''))\n\t\t\t\treturn allowedExtensions.includes(fileExtension)\n\t\t\t}) as File[]\n\n\t\t\tif (validFiles.length > 0) {\n\t\t\t\tsetFiles(validFiles)\n\t\t\t\tsetUploadMode('file')\n\n\t\t\t\tif (onFileSelected && validFiles.length === 1) {\n\t\t\t\t\tonFileSelected(validFiles[0])\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\taccept: acceptedFileTypes,\n\t\tmaxFiles: maxFiles,\n\t\tnoClick: true,\n\t\tnoKeyboard: true,\n\t})\n\n\tconst resetSelection = () => {\n\t\tsetFiles([])\n\t\tsetDirectoryPath('')\n\t\tsetUploadMode(null)\n\t}\n\n\treturn (\n\t\t<Box sx={{ textAlign: 'center', mt: 4 }}>\n\t\t\t{!uploadMode ? (\n\t\t\t\t<Box\n\t\t\t\t\t{...getRootProps()}\n\t\t\t\t\tsx={{\n\t\t\t\t\t\ttextAlign: 'center',\n\t\t\t\t\t\tborder: '2px dashed',\n\t\t\t\t\t\tborderColor: isDragActive ? 'primary.main' : 'grey.300',\n\t\t\t\t\t\twidth: '100%',\n\t\t\t\t\t\tpadding: '40px',\n\t\t\t\t\t\tborderRadius: '8px',\n\t\t\t\t\t\tbackgroundColor: isDragActive ? 'action.hover' : 'background.paper',\n\t\t\t\t\t\t'&:hover': {\n\t\t\t\t\t\t\tbackgroundColor: 'action.hover',\n\t\t\t\t\t\t\tborderColor: 'primary.main',\n\t\t\t\t\t\t},\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t<input {...getInputProps()} />\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype='file'\n\t\t\t\t\t\tref={directoryInputRef}\n\t\t\t\t\t\tmultiple\n\t\t\t\t\t\tonChange={handleDirectoryChange}\n\t\t\t\t\t\tstyle={{ display: 'none' }}\n\t\t\t\t\t\tid='directory-picker'\n\t\t\t\t\t/>\n\n\t\t\t\t\t<CloudUploadIcon\n\t\t\t\t\t\tsx={{ fontSize: 60, color: 'primary.main', mb: 2 }}\n\t\t\t\t\t/>\n\n\t\t\t\t\t<Typography variant='h6' gutterBottom>\n\t\t\t\t\t\t{isDragActive\n\t\t\t\t\t\t\t? 'Отпустите файл здесь'\n\t\t\t\t\t\t\t: 'Перетащите файл сюда или выберите опцию загрузки'}\n\t\t\t\t\t</Typography>\n\n\t\t\t\t\t<Box\n\t\t\t\t\t\tsx={{ display: 'flex', justifyContent: 'center', gap: 2, mt: 2 }}\n\t\t\t\t\t>\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tvariant='contained'\n\t\t\t\t\t\t\tcolor='primary'\n\t\t\t\t\t\t\tstartIcon={<UploadFileIcon />}\n\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\tconst fileInput = document.createElement('input')\n\t\t\t\t\t\t\t\tfileInput.type = 'file'\n\t\t\t\t\t\t\t\tfileInput.accept = Object.values(acceptedFileTypes)\n\t\t\t\t\t\t\t\t\t.flat()\n\t\t\t\t\t\t\t\t\t.join(',')\n\t\t\t\t\t\t\t\tfileInput.multiple = maxFiles > 1\n\n\t\t\t\t\t\t\t\tfileInput.onchange = (e: Event) => {\n\t\t\t\t\t\t\t\t\tconst target = e.target as HTMLInputElement\n\t\t\t\t\t\t\t\t\tif (target.files && target.files.length > 0) {\n\t\t\t\t\t\t\t\t\t\tconst selectedFiles = Array.from(target.files) as File[]\n\t\t\t\t\t\t\t\t\t\tsetFiles(selectedFiles)\n\t\t\t\t\t\t\t\t\t\tsetUploadMode('file')\n\n\t\t\t\t\t\t\t\t\t\tif (onFileSelected && selectedFiles.length === 1) {\n\t\t\t\t\t\t\t\t\t\t\tonFileSelected(selectedFiles[0])\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tfileInput.click()\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tВыбрать файл\n\t\t\t\t\t\t</Button>\n\n\t\t\t\t\t\t<label htmlFor='directory-picker'>\n\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\tvariant='outlined'\n\t\t\t\t\t\t\t\tcolor='primary'\n\t\t\t\t\t\t\t\tcomponent='span'\n\t\t\t\t\t\t\t\tstartIcon={<FolderIcon />}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\tВыбрать директорию\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t</label>\n\t\t\t\t\t</Box>\n\n\t\t\t\t\t<Typography variant='body2' color='text.secondary' sx={{ mt: 2 }}>\n\t\t\t\t\t\tПоддерживаются файлы{' '}\n\t\t\t\t\t\t{Object.values(acceptedFileTypes).flat().join(', ')}\n\t\t\t\t\t</Typography>\n\t\t\t\t</Box>\n\t\t\t) : (\n\t\t\t\t<Box\n\t\t\t\t\tsx={{\n\t\t\t\t\t\tborder: '1px solid',\n\t\t\t\t\t\tborderColor: 'primary.main',\n\t\t\t\t\t\tborderRadius: '8px',\n\t\t\t\t\t\tpadding: 3,\n\t\t\t\t\t\tbackgroundColor: 'background.paper',\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t{uploadMode === 'file' ? (\n\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t<Typography variant='body1' color='text.primary'>\n\t\t\t\t\t\t\t\tВыбран файл: {files[0]?.name}\n\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t{files.length > 1 && (\n\t\t\t\t\t\t\t\t<Typography variant='body2' color='text.secondary'>\n\t\t\t\t\t\t\t\t\tИ еще {files.length - 1} файлов\n\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</>\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t<Typography variant='body1' color='text.primary'>\n\t\t\t\t\t\t\t\tВыбрана директория: {directoryPath}\n\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t<Typography variant='body2' color='text.secondary'>\n\t\t\t\t\t\t\t\tКоличество файлов: {files.length}\n\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t</>\n\t\t\t\t\t)}\n\n\t\t\t\t\t<Button\n\t\t\t\t\t\tvariant='text'\n\t\t\t\t\t\tcolor='error'\n\t\t\t\t\t\tonClick={resetSelection}\n\t\t\t\t\t\tsx={{ mt: 2 }}\n\t\t\t\t\t>\n\t\t\t\t\t\tСбросить выбор\n\t\t\t\t\t</Button>\n\t\t\t\t</Box>\n\t\t\t)}\n\t\t</Box>\n\t)\n}\n\nexport default UniversalUploader\n","import React, { useState } from 'react'\nimport { Box, Container, Typography } from '@mui/material'\nimport { Requests } from '../api/Requests'\nimport UniversalUploader from '../components/UniversalUploader'\nimport JSZip from 'jszip'\n\nexport default function Import() {\n\tconst [isLoading, setIsLoading] = useState(false)\n\n\tconst handleFileSelected = async (file: File) => {\n\t\tsetIsLoading(true)\n\t\ttry {\n\t\t\tlet response\n\t\t\tconsole.log('Single file selected')\n\t\t\tresponse = await Requests.importSingleFile(\n\t\t\t\tArray.isArray(file) ? file[0] : file\n\t\t\t)\n\t\t\tconsole.log(response)\n\t\t} catch (error) {\n\t\t\tconsole.error('Ошибка:', error)\n\t\t} finally {\n\t\t\tsetIsLoading(false)\n\t\t}\n\t}\n\n\tconst handleDirectorySelected = async (\n\t\tdirectoryPath: string,\n\t\tfiles: File[]\n\t) => {\n\t\tsetIsLoading(true)\n\t\ttry {\n\t\t\t// Создаем zip-архив\n\t\t\tconst zip = new JSZip()\n\t\t\tfiles.forEach(file => {\n\t\t\t\tconst relativePath = file.webkitRelativePath\n\t\t\t\tzip.file(relativePath, file)\n\t\t\t})\n\t\t\tconst zipBlob = await zip.generateAsync({ type: 'blob' })\n\t\t\tconst formData = new FormData()\n\t\t\tformData.append('file', zipBlob, `${directoryPath}.zip`)\n\t\t\t// Отправляем zip-архив на сервер\n\t\t\tconst response = await Requests.importDirectory(formData)\n\t\t\tconsole.log('Directory imported successfully:', response.data)\n\t\t} catch (error) {\n\t\t\tconsole.error('Error importing directory:', error)\n\t\t} finally {\n\t\t\tsetIsLoading(false)\n\t\t}\n\t}\n\n\treturn (\n\t\t<Container maxWidth='md' sx={{ mt: 4 }}>\n\t\t\t<Typography variant='h4' gutterBottom align='center'>\n\t\t\t\tІмпорт навчального плану\n\t\t\t</Typography>\n\t\t\t<Typography\n\t\t\t\tvariant='body1'\n\t\t\t\tgutterBottom\n\t\t\t\talign='center'\n\t\t\t\tcolor='text.secondary'\n\t\t\t>\n\t\t\t\tЗавантажте Excel або Word файл з навчальним планом або виберіть\n\t\t\t\tдиректорію\n\t\t\t</Typography>\n\n\t\t\t<UniversalUploader\n\t\t\t\tonFileSelected={handleFileSelected}\n\t\t\t\tonDirectorySelected={handleDirectorySelected}\n\t\t\t\tacceptedFileTypes={{\n\t\t\t\t\t'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet': [\n\t\t\t\t\t\t'.xlsx',\n\t\t\t\t\t],\n\t\t\t\t\t'application/vnd.ms-excel': ['.xls'],\n\t\t\t\t\t// 'application/vnd.openxmlformats-officedocument.wordprocessingml.document':\n\t\t\t\t\t// \t['.docx'],\n\t\t\t\t\t// 'application/msword': ['.doc'],\n\t\t\t\t}}\n\t\t\t\tmaxFiles={1}\n\t\t\t/>\n\t\t</Container>\n\t)\n}\n"],"names":["axiosInstance","axios","create","baseURL","headers","Accept","interceptors","request","use","_request$method","console","log","method","toUpperCase","url","error","Promise","reject","response","async","_error$response","_error$response$data","config","code","data","message","resolve","Requests","getPlans","curriculumId","get","getAllCurriculums","importSingleFile","file","formData","FormData","append","post","importMultiFile","files","forEach","importDirectory","filepath","getCourse","_ref","_files$","onFileSelected","onDirectorySelected","acceptedFileTypes","maxFiles","directoryPath","setDirectoryPath","useState","setFiles","uploadMode","setUploadMode","directoryInputRef","useRef","useEffect","current","setAttribute","getRootProps","getInputProps","isDragActive","useDropzone","onDrop","acceptedFiles","validFiles","filter","_file$name$split$pop","fileExtension","name","split","pop","toLowerCase","Object","values","flat","map","ext","replace","includes","length","accept","noClick","noKeyboard","_jsx","Box","sx","textAlign","mt","children","_jsxs","border","borderColor","borderRadius","padding","backgroundColor","_Fragment","Typography","variant","color","Button","onClick","resetSelection","width","type","ref","multiple","onChange","event","fileList","target","selectedFiles","Array","from","directoryName","webkitRelativePath","style","display","id","CloudUploadIcon","fontSize","mb","gutterBottom","justifyContent","gap","startIcon","UploadFileIcon","fileInput","document","createElement","join","onchange","e","click","htmlFor","component","FolderIcon","Import","isLoading","setIsLoading","Container","maxWidth","align","UniversalUploader","isArray","zip","JSZip","relativePath","zipBlob","generateAsync"],"sourceRoot":""}