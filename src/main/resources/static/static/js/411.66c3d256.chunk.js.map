{"version":3,"file":"static/js/411.66c3d256.chunk.js","mappings":"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","sources":["pages/StudyLoad.tsx","api/Requests.ts"],"sourcesContent":["import { Box, FormControl, InputLabel, MenuItem, Paper, Select, SelectChangeEvent, styled, Table, TableBody, TableCell, TableContainer, TableHead, TableRow } from \"@mui/material\";\nimport { useEffect, useState } from \"react\";\nimport { Requests } from \"../api/Requests\";\n\ninterface PlanItem {\n  name: string;\n  shortName: string;\n  groups: string;\n  course: string | number;\n  semester: string | number;\n  ects: number;\n  totalHours: number;\n  lectureHours: number;\n  labHours: number;\n  practiceHours: number;\n  individualTask: string | boolean;\n  hasCredit: boolean; \n  hasExam: boolean;  \n}\n\ninterface ApiResponse {\n  autumn: PlanItem[];\n  spring: PlanItem[];\n}\n\n const CenteredCell = styled(TableCell)(({ theme }) => ({\n\t\ttextAlign: 'center',\n\t\tpadding: '2px',\n\t\t// fontWeight: 'bold',\n\t\tverticalAlign: 'middle',\n\t\tborder: '1px solid rgb(11, 1, 1)',\n\t\tbackgroundColor: 'white',\n\t\theight: '30px',\n }))\n\nexport default function StudyLoad() {\n\tconst [allPlans, setAllPlans] = useState<ApiResponse>({\n\t\tautumn: [],\n\t\tspring: [],\n\t})\n\tconst [selectedSeason, setSelectedSeason] = useState<'autumn' | 'spring'>(\n\t\t'autumn'\n\t)\n\tconst [displayedPlans, setDisplayedPlans] = useState<PlanItem[]>([])\n\tconst [loading, setLoading] = useState<boolean>(true)\n\n\tuseEffect(() => {\n\t\tconst fetchData = async () => {\n\t\t\tsetLoading(true)\n\t\t\ttry {\n\t\t\t\tconst resp = await Requests.getCourse()\n\n\t\t\t\tif (resp && typeof resp === 'object') {\n\t\t\t\t\tconst typedResp = resp as ApiResponse\n\t\t\t\t\tsetAllPlans({\n\t\t\t\t\t\tautumn: Array.isArray(typedResp.autumn) ? typedResp.autumn : [],\n\t\t\t\t\t\tspring: Array.isArray(typedResp.spring) ? typedResp.spring : [],\n\t\t\t\t\t})\n\n\t\t\t\t\tsetDisplayedPlans(\n\t\t\t\t\t\tArray.isArray(typedResp[selectedSeason])\n\t\t\t\t\t\t\t? typedResp[selectedSeason]\n\t\t\t\t\t\t\t: []\n\t\t\t\t\t)\n\t\t\t\t} else {\n\t\t\t\t\tconsole.error('Unexpected response format')\n\t\t\t\t\tsetAllPlans({ autumn: [], spring: [] })\n\t\t\t\t\tsetDisplayedPlans([])\n\t\t\t\t}\n\t\t\t} catch (error) {\n\t\t\t\tconsole.error('Something went wrong: ' + error)\n\t\t\t\tsetAllPlans({ autumn: [], spring: [] })\n\t\t\t\tsetDisplayedPlans([])\n\t\t\t} finally {\n\t\t\t\tsetLoading(false)\n\t\t\t}\n\t\t}\n\n\t\tfetchData()\n\t}, [selectedSeason])\n\n\t// Обновление отображаемых данных при изменении сезона\n\tuseEffect(() => {\n\t\tsetDisplayedPlans(allPlans[selectedSeason] || [])\n\t\tconsole.log('Plans updated:', allPlans[selectedSeason]);\n\t}, [selectedSeason, allPlans])\n\n\t// Типизируем параметр event\n\tconst handleSeasonChange = (event: SelectChangeEvent) => {\n\t\tsetSelectedSeason(event.target.value as 'autumn' | 'spring')\n\t}\n\n\treturn (\n\t\t<Box>\n\t\t\t<Box sx={{ mb: 2, mt: 2 }}>\n\t\t\t\t<FormControl fullWidth>\n\t\t\t\t\t<InputLabel id='season-select-label'>Выберите семестр</InputLabel>\n\t\t\t\t\t<Select\n\t\t\t\t\t\tlabelId='season-select-label'\n\t\t\t\t\t\tid='season-select'\n\t\t\t\t\t\tvalue={selectedSeason}\n\t\t\t\t\t\tlabel='Выберите семестр'\n\t\t\t\t\t\tonChange={handleSeasonChange}\n\t\t\t\t\t>\n\t\t\t\t\t\t<MenuItem value='autumn'>Осень</MenuItem>\n\t\t\t\t\t\t<MenuItem value='spring'>Весна</MenuItem>\n\t\t\t\t\t</Select>\n\t\t\t\t</FormControl>\n\t\t\t</Box>\n\n\t\t\t<Paper sx={{ width: '100%', overflow: 'hidden' }}>\n\t\t\t\t<TableContainer sx={{ maxHeight: '78vh' }}>\n\t\t\t\t\t{' '}\n\t\t\t\t\t{/* Установим фиксированную высоту для контейнера */}\n\t\t\t\t\t<Table\n\t\t\t\t\t\tstickyHeader\n\t\t\t\t\t\tsx={{\n\t\t\t\t\t\t\twidth: '100%',\n\t\t\t\t\t\t\ttableLayout: 'fixed', // Фиксируем ширину колонок\n\t\t\t\t\t\t\t'& .MuiTableCell-stickyHeader': {\n\t\t\t\t\t\t\t\tbackgroundColor: 'white',\n\t\t\t\t\t\t\t\tzIndex: 1, // Убедимся, что заголовок всегда находится поверх содержимого\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\t<TableHead>\n\t\t\t\t\t\t\t<TableRow>\n\t\t\t\t\t\t\t\t<CenteredCell>#</CenteredCell>\n\t\t\t\t\t\t\t\t<CenteredCell>name</CenteredCell>\n\t\t\t\t\t\t\t\t<CenteredCell>shortName</CenteredCell>\n\t\t\t\t\t\t\t\t<CenteredCell>group</CenteredCell>\n\t\t\t\t\t\t\t\t<CenteredCell>course</CenteredCell>\n\t\t\t\t\t\t\t\t<CenteredCell>semester</CenteredCell>\n\t\t\t\t\t\t\t\t<CenteredCell>ects</CenteredCell>\n\t\t\t\t\t\t\t\t<CenteredCell>totalHours</CenteredCell>\n\t\t\t\t\t\t\t\t<CenteredCell>lectureHours</CenteredCell>\n\t\t\t\t\t\t\t\t<CenteredCell>labHours</CenteredCell>\n\t\t\t\t\t\t\t\t<CenteredCell>practiceHours</CenteredCell>\n\t\t\t\t\t\t\t\t<CenteredCell>individualTask</CenteredCell>\n\t\t\t\t\t\t\t\t<CenteredCell>Credit</CenteredCell>\n\t\t\t\t\t\t\t\t<CenteredCell>Exam</CenteredCell>\n\t\t\t\t\t\t\t</TableRow>\n\t\t\t\t\t\t</TableHead>\n\t\t\t\t\t\t<TableBody>\n\t\t\t\t\t\t\t{loading ? (\n\t\t\t\t\t\t\t\t<TableRow>\n\t\t\t\t\t\t\t\t\t<CenteredCell colSpan={13}>Загрузка данных...</CenteredCell>\n\t\t\t\t\t\t\t\t</TableRow>\n\t\t\t\t\t\t\t) : displayedPlans.length === 0 ? (\n\t\t\t\t\t\t\t\t<TableRow>\n\t\t\t\t\t\t\t\t\t<CenteredCell colSpan={13}>\n\t\t\t\t\t\t\t\t\t\tНет данных для отображения\n\t\t\t\t\t\t\t\t\t</CenteredCell>\n\t\t\t\t\t\t\t\t</TableRow>\n\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\tdisplayedPlans.map((plan, index) => (\n\t\t\t\t\t\t\t\t\t<TableRow key={index}>\n\t\t\t\t\t\t\t\t\t\t<CenteredCell>{index + 1}</CenteredCell>\n\t\t\t\t\t\t\t\t\t\t<CenteredCell>{plan.name}</CenteredCell>\n\t\t\t\t\t\t\t\t\t\t<CenteredCell>{plan.shortName}</CenteredCell>\n\t\t\t\t\t\t\t\t\t\t<CenteredCell>{plan.groups}</CenteredCell>\n\t\t\t\t\t\t\t\t\t\t<CenteredCell>{plan.course}</CenteredCell>\n\t\t\t\t\t\t\t\t\t\t<CenteredCell>{plan.semester}</CenteredCell>\n\t\t\t\t\t\t\t\t\t\t<CenteredCell>{plan.ects}</CenteredCell>\n\t\t\t\t\t\t\t\t\t\t<CenteredCell>{plan.totalHours}</CenteredCell>\n\t\t\t\t\t\t\t\t\t\t<CenteredCell>{plan.lectureHours}</CenteredCell>\n\t\t\t\t\t\t\t\t\t\t<CenteredCell>{plan.labHours}</CenteredCell>\n\t\t\t\t\t\t\t\t\t\t<CenteredCell>{plan.practiceHours}</CenteredCell>\n\t\t\t\t\t\t\t\t\t\t<CenteredCell>{plan.individualTask}</CenteredCell>\n\t\t\t\t\t\t\t\t\t\t<CenteredCell>{plan.hasCredit ? 'З' : ''}</CenteredCell>\n\t\t\t\t\t\t\t\t\t\t<CenteredCell>{plan.hasExam ? 'E' : ''}</CenteredCell>\n\t\t\t\t\t\t\t\t\t</TableRow>\n\t\t\t\t\t\t\t\t))\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</TableBody>\n\t\t\t\t\t</Table>\n\t\t\t\t</TableContainer>\n\t\t\t\t<Box sx={{ p: 2, display: 'flex', justifyContent: 'flex-end' }}>\n\t\t\t\t\tВсего записей: {displayedPlans.length}\n\t\t\t\t</Box>\n\t\t\t</Paper>\n\t\t</Box>\n\t)\n}","import axios from 'axios'\n\nconst domain = `http://localhost:8080/api/`\n\nconst axiosInstance = axios.create({\n\tbaseURL: domain,\n\theaders: {\n\t\t'Content-Type': 'application/json',\n\t\tAccept: 'application/json',\n\t},\n})\n\naxiosInstance.interceptors.request.use(\n\trequest => {\n\t\tconsole.log(`${request.method?.toUpperCase()} ${request.url}`, request)\n\t\treturn request\n\t},\n\terror => {\n\t\tconsole.error('REQ FAIL: ', error)\n\t\treturn Promise.reject(error)\n\t}\n)\n\naxiosInstance.interceptors.response.use(\n\tresponse => {\n\t\tconsole.log('RES: ', response)\n\t\treturn response\n\t},\n\tasync error => {\n\t\tconsole.error(\n\t\t\t`${error.config.method.toUpperCase()}: ${error.config.url} ${error.code}`,\n\t\t\terror\n\t\t)\n\t\tif (error.response?.data?.message) {\n\t\t\treturn Promise.resolve(error.response)\n\t\t}\n\t\treturn Promise.reject(error)\n\t}\n)\nexport const Requests = {\n\tasync getPlans(curriculumId: number) {\n\t\ttry {\n\t\t\tconst response = await axiosInstance.get(\n\t\t\t\t`/curriculum/${curriculumId}/all`\n\t\t\t)\n\t\t\treturn response.data\n\t\t} catch (error) {\n\t\t\tconsole.error('Error fetching plans:', error)\n\t\t\treturn []\n\t\t}\n\t},\n\n\tasync getAllCurriculums() {\n\t\ttry {\n\t\t\tconst response = await axiosInstance.get('/curriculum/')\n\t\t\treturn response.data\n\t\t} catch (error) {\n\t\t\tconsole.error('Error fetching all curriculums:', error)\n\t\t\treturn []\n\t\t}\n\t},\n\n\tasync importSingleFile(file: File) {\n\t\ttry {\n\t\t\tconst formData = new FormData()\n\t\t\tformData.append('file', file)\n\n\t\t\tconst response = await axiosInstance.post('/import/single', formData, {\n\t\t\t\theaders: {\n\t\t\t\t\t'Content-Type': 'multipart/form-data',\n\t\t\t\t},\n\t\t\t})\n\t\t\treturn response.data\n\t\t} catch (error) {\n\t\t\tconsole.error('Error importing file:', error)\n\t\t\treturn []\n\t\t}\n\t},\n\tasync importMultiFile(files: File[]) {\n\t\ttry {\n\t\t\tconst formData = new FormData()\n\t\t\tfiles.forEach((file) => {\n\t\t\t\tformData.append('file', file) // Добавляем каждый файл отдельно\n\t\t\t})\n\n\t\t\tconst response = await axiosInstance.post('/import/multiple', formData, {\n\t\t\t\theaders: {\n\t\t\t\t\t'Content-Type': 'multipart/form-data',\n\t\t\t\t},\n\t\t\t})\n\t\t\treturn response.data\n\t\t} catch (error) {\n\t\t\tconsole.error('Error importing file:', error)\n\t\t\treturn []\n\t\t}\n\t},\n\n\tasync importDirectory(filepath: FormData) {\n\t\ttry {\n\t\t\tconst response = await axiosInstance.post('/import/directory', filepath, {\n\t\t\t\theaders: {\n\t\t\t\t\t'Content-Type': 'multipart/form-data',\n\t\t\t\t},\n\t\t\t})\n\t\t\treturn response.data\n\t\t} catch (error) {\n\t\t\tconsole.error('Error fetching all curriculums:', error)\n\t\t\treturn []\n\t\t}\n\t},\n\n\tasync getCourse() {\n\t\ttry {\n\t\t\tconst response = await axiosInstance.get('/export/')\n\t\t\treturn response.data\n\t\t} catch (error) {\n\t\t\tconsole.error('Error fetching all courses:', error)\n\t\t\treturn []\n\t\t}\n\t},\n}\n"],"names":["CenteredCell","styled","TableCell","_ref","theme","textAlign","padding","verticalAlign","border","backgroundColor","height","StudyLoad","allPlans","setAllPlans","useState","autumn","spring","selectedSeason","setSelectedSeason","displayedPlans","setDisplayedPlans","loading","setLoading","useEffect","async","resp","Requests","getCourse","typedResp","Array","isArray","console","error","fetchData","log","_jsxs","Box","children","_jsx","sx","mb","mt","FormControl","fullWidth","InputLabel","id","Select","labelId","value","label","onChange","event","target","MenuItem","Paper","width","overflow","TableContainer","maxHeight","Table","stickyHeader","tableLayout","zIndex","TableHead","TableRow","TableBody","colSpan","length","map","plan","index","name","shortName","groups","course","semester","ects","totalHours","lectureHours","labHours","practiceHours","individualTask","hasCredit","hasExam","p","display","justifyContent","axiosInstance","axios","create","baseURL","headers","Accept","interceptors","request","use","_request$method","method","toUpperCase","url","Promise","reject","response","_error$response","_error$response$data","config","code","data","message","resolve","getPlans","curriculumId","get","getAllCurriculums","importSingleFile","file","formData","FormData","append","post","importMultiFile","files","forEach","importDirectory","filepath"],"sourceRoot":""}